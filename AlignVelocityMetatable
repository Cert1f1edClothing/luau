type AlignVelocityMetatable = {
	BasePart: BasePart;
	Attachment: Attachment?;
	AlignPosition: AlignPosition?;
	AlignOrientation: AlignOrientation?;
	CFrame: CFrame?;
	Position: Vector3?;
	Orientation: Vector3?;
	Destroy: (self: AlignVelocityMetatable) -> ();
};

local AlignVelocityMetatable: AlignVelocityMetatable; do
	local instanceNew = Instance.new;
	local vector3New = Vector3.new;
	local cframeNew = CFrame.new;
	local cframeAngles = CFrame.Angles;
	
	local MATH_HUGE = math.huge;
	local MATH_PI = math.pi;
	local ENUM_POSITION_ALIGNMENT_MODE = Enum.PositionAlignmentMode.OneAttachment;
	local ENUM_ORIENTATION_ALIGNMENT_MODE = Enum.OrientationAlignmentMode.OneAttachment;
	
	function AlignVelocityMetatable(part: BasePart): AlignVelocityMetatable
		local userdata: AlignVelocityMetatable = newproxy(true);
		local metatable: AlignVelocityMetatable = getmetatable(userdata);
		
		metatable.BasePart = part;
	
		function metatable:Destroy()
			self = getmetatable(self);
			
			if self.Attachment then
				self.Attachment:Destroy();
			end
	
			if self.AlignPosition then
				self.AlignPosition:Destroy();
			end
	
			if self.AlignOrientation then
				self.AlignOrientation:Destroy();
			end
		end
		
		function metatable:__index(k: string)
			if k == "CFrame" or k == "Position" or k == "Orientation" then
				return getmetatable(self)[k] or part[k];
			end
			
			return getmetatable(self)[k];
		end
		
		local function setPosition(v)
			if typeof(v) == "CFrame" then
				v = v.Position;
			end
	
			metatable.Position = v;
	
			local alignPosition = metatable.AlignPosition;

			if alignPosition then
				alignPosition.Position = v;
			else
				alignPosition = instanceNew("AlignPosition");
				alignPosition.Mode = ENUM_POSITION_ALIGNMENT_MODE;
				alignPosition.Attachment0 = metatable.Attachment;
				alignPosition.MaxForce = MATH_HUGE;
				alignPosition.MaxVelocity = MATH_HUGE;
				alignPosition.Responsiveness = 200;
				alignPosition.Position = v;
				alignPosition.Parent = part;
				metatable.AlignPosition = alignPosition;
			end
		end
	
		local function setOrientation(v)
			if type(v) == "vector" then
				metatable.Orientation = v;
				v *= MATH_PI / 180;
				v = cframeAngles(v.X, v.Y, v.Z);
			else
				metatable.Orientation = vector3New(v:ToOrientation());
			end
	
			local alignOrientation = metatable.AlignOrientation;

			if alignOrientation then
				alignOrientation.CFrame = v;
			else
				alignOrientation = instanceNew("AlignOrientation");
				alignOrientation.Mode = ENUM_ORIENTATION_ALIGNMENT_MODE;
				alignOrientation.Attachment0 = metatable.Attachment;
				alignOrientation.MaxTorque = MATH_HUGE;
				alignOrientation.MaxAngularVelocity = MATH_HUGE;
				alignOrientation.Responsiveness = 200;
				alignOrientation.CFrame = v;
				alignOrientation.Parent = part;
				metatable.AlignOrientation = alignOrientation;
			end
		end
	
		function metatable:__newindex(k: string, v)
			self = getmetatable(self);
	
			if k == "CFrame" then
				self.CFrame = typeof(v) == "Vector3" and cframeNew(v) or v;
	
				if not self.Attachment then
					self.Attachment = instanceNew("Attachment", part);
				end
	
				setPosition(v);
				setOrientation(v);
			elseif k == "Position" then
				self.Position = typeof(v) == "CFrame" and v.Position or v;
	
				if not self.Attachment then
					self.Attachment = instanceNew("Attachment", part);
				end
	
				setPosition(v);
			elseif k == "Orientation" then
				self.Orientation = typeof(v) == "CFrame" and vector3New(v:ToOrientation()) or v;
	
				if not self.Attachment then
					self.Attachment = instanceNew("Attachment", part);
				end
	
				setOrientation(v);
			else
				self[k] = v;
			end
		end
	
		return userdata;
	end
end

return AlignVelocityMetatable;
--Made by Cert1f1edClothing
